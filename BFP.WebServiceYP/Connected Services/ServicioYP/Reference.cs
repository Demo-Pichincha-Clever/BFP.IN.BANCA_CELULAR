//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFP.WebServiceYP.ServicioYP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://yellowpepper.com/webservices/", ConfigurationName="ServicioYP.metroLineSoap")]
    public interface metroLineSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendShortMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string sendShortMessage(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendShortMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendShortMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendPremiumMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string sendPremiumMessage(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendPremiumMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendPremiumMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendConfirmMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string sendConfirmMessage(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendConfirmMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendConfirmMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendFreeMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string sendFreeMessage(string Serial, string Pin, string Mobile, string Message, string Sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://yellowpepper.com/webservices/sendFreeMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendFreeMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface metroLineSoapChannel : BFP.WebServiceYP.ServicioYP.metroLineSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class metroLineSoapClient : System.ServiceModel.ClientBase<BFP.WebServiceYP.ServicioYP.metroLineSoap>, BFP.WebServiceYP.ServicioYP.metroLineSoap {
        
        public metroLineSoapClient() {
        }
        
        public metroLineSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public metroLineSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public metroLineSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public metroLineSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string sendShortMessage(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendShortMessage(Serial, Pin, Mobile, Message, Sender);
        }
        
        public System.Threading.Tasks.Task<string> sendShortMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendShortMessageAsync(Serial, Pin, Mobile, Message, Sender);
        }
        
        public string sendPremiumMessage(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendPremiumMessage(Serial, Pin, Mobile, Message, Sender);
        }
        
        public System.Threading.Tasks.Task<string> sendPremiumMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendPremiumMessageAsync(Serial, Pin, Mobile, Message, Sender);
        }
        
        public string sendConfirmMessage(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendConfirmMessage(Serial, Pin, Mobile, Message, Sender);
        }
        
        public System.Threading.Tasks.Task<string> sendConfirmMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendConfirmMessageAsync(Serial, Pin, Mobile, Message, Sender);
        }
        
        public string sendFreeMessage(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendFreeMessage(Serial, Pin, Mobile, Message, Sender);
        }
        
        public System.Threading.Tasks.Task<string> sendFreeMessageAsync(string Serial, string Pin, string Mobile, string Message, string Sender) {
            return base.Channel.sendFreeMessageAsync(Serial, Pin, Mobile, Message, Sender);
        }
    }
}
